diff -up mozilla-aurora/browser/app/profile/firefox.js.addons mozilla-aurora/browser/app/profile/firefox.js
--- mozilla-aurora/browser/app/profile/firefox.js.addons	2015-03-12 13:21:14.000000000 +0100
+++ mozilla-aurora/browser/app/profile/firefox.js	2015-03-12 14:25:39.974909169 +0100
@@ -65,7 +65,8 @@ pref("extensions.hotfix.certs.1.sha1Fing
 
 // Disable add-ons that are not installed by the user in all scopes by default.
 // See the SCOPE constants in AddonManager.jsm for values to use here.
-pref("extensions.autoDisableScopes", 15);
+pref("extensions.autoDisableScopes", 0);
+pref("extensions.showMismatchUI", false);
 
 // Dictionary download preference
 pref("browser.dictionaries.download.url", "https://addons.mozilla.org/%LOCALE%/firefox/dictionaries/");
diff -up mozilla-aurora/toolkit/mozapps/extensions/internal/XPIProvider.jsm.addons mozilla-aurora/toolkit/mozapps/extensions/internal/XPIProvider.jsm
--- mozilla-aurora/toolkit/mozapps/extensions/internal/XPIProvider.jsm.addons	2015-03-12 14:25:39.975909166 +0100
+++ mozilla-aurora/toolkit/mozapps/extensions/internal/XPIProvider.jsm	2015-03-12 15:23:05.879366812 +0100
@@ -2102,11 +2102,7 @@ this.XPIProvider = {
 
       AddonManagerPrivate.markProviderSafe(this);
 
-      if (aAppChanged === undefined) {
-        // For new profiles we will never need to show the add-on selection UI
-        Services.prefs.setBoolPref(PREF_SHOWN_SELECTION_UI, true);
-      }
-      else if (aAppChanged && !this.allAppGlobal &&
+      if (aAppChanged && !this.allAppGlobal &&
                Preferences.get(PREF_EM_SHOW_MISMATCH_UI, true)) {
         if (!Preferences.get(PREF_SHOWN_SELECTION_UI, false)) {
           // Flip a flag to indicate that we interrupted startup with an interactive prompt
@@ -2126,6 +2122,9 @@ this.XPIProvider = {
             flushCaches = true;
           }
         }
+      } else {
+        // For new profiles we will never need to show the add-on selection UI
+        Services.prefs.setBoolPref(PREF_SHOWN_SELECTION_UI, true);
       }
 
       if (flushCaches) {
